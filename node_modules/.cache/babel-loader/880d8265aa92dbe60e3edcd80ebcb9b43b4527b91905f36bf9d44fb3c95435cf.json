{"ast":null,"code":"var _jsxFileName = \"/home/rajdeep/RAJDEEP/researchContent/VTS/VTS-Frontend/vts-frontend/frontend/src/Components/serviceDataLog/parseData.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ubuntuIP } from '../../Components/constantVariable';\nimport './parseData.css'; // Import your CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParseData = ({\n  rowData,\n  s_imei_no,\n  onClose\n}) => {\n  _s();\n  const [formData, setFormData] = useState(rowData.s_raw_pkt);\n  const [packetType, setPacketType] = useState('Rudra'); // Default to Rudra\n  const [fetchedData, setFetchedData] = useState([]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const queryString = `?i_imei_no=${s_imei_no}&deviceId={}&s_raw_pkt=${formData}&packetType=${packetType}`;\n    fetch(`${ubuntuIP}/api/v0/getParsedData${queryString}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(\"form DATA\", formData);\n      setFetchedData(data.data);\n      alert('Data fetched successfully!');\n    }).catch(error => {\n      console.error('Error:', error);\n      alert('Error! Please try again.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: packetType,\n        onChange: e => setPacketType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Rudra\",\n          children: \"Rudra\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"NVR\",\n          children: \"NVR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: formData,\n        onChange: e => setFormData(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), fetchedData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Fetched Details:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), fetchedData.map((detail, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-row\",\n          children: [Object.keys(detail).reduce((chunks, key, index) => {\n            const chunkIndex = Math.floor(index / 5);\n            if (!chunks[chunkIndex]) {\n              chunks[chunkIndex] = [];\n            }\n            chunks[chunkIndex].push({\n              key,\n              value: detail[key]\n            });\n            return chunks;\n          }, []).map((chunk, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: chunk.map(({\n              key,\n              value\n            }, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [key, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 38\n              }, this), \" \", value]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 23\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ParseData, \"1VT2xp0QpoHfKY5aLSOfK4HG6/Q=\");\n_c = ParseData;\nexport default ParseData;\nvar _c;\n$RefreshReg$(_c, \"ParseData\");","map":{"version":3,"names":["React","useState","ubuntuIP","jsxDEV","_jsxDEV","ParseData","rowData","s_imei_no","onClose","_s","formData","setFormData","s_raw_pkt","packetType","setPacketType","fetchedData","setFetchedData","handleSubmit","e","preventDefault","queryString","fetch","method","headers","then","response","json","data","console","log","alert","catch","error","className","children","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","length","map","detail","index","Object","keys","reduce","chunks","key","chunkIndex","Math","floor","push","chunk","_c","$RefreshReg$"],"sources":["/home/rajdeep/RAJDEEP/researchContent/VTS/VTS-Frontend/vts-frontend/frontend/src/Components/serviceDataLog/parseData.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ubuntuIP } from '../../Components/constantVariable';\nimport './parseData.css'; // Import your CSS file for styling\n\nconst ParseData = ({ rowData, s_imei_no, onClose }) => {\n  const [formData, setFormData] = useState(rowData.s_raw_pkt);\n  const [packetType, setPacketType] = useState('Rudra'); // Default to Rudra\n  const [fetchedData, setFetchedData] = useState([]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const queryString = `?i_imei_no=${s_imei_no}&deviceId={}&s_raw_pkt=${formData}&packetType=${packetType}`;\n    fetch(`${ubuntuIP}/api/v0/getParsedData${queryString}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(\"form DATA\", formData);\n        setFetchedData(data.data);\n        alert('Data fetched successfully!')\n      })\n      .catch(error => {\n        console.error('Error:', error);\n        alert('Error! Please try again.');\n      });\n  };\n\n  return (\n    <div className=\"modal\">\n      <div className=\"modal-content\">\n        <select value={packetType} onChange={(e) => setPacketType(e.target.value)}>\n          <option value=\"Rudra\">Rudra</option>\n          <option value=\"NVR\">NVR</option>\n        </select>\n        <input type=\"text\" value={formData} onChange={(e) => setFormData(e.target.value)} />\n        <button onClick={handleSubmit}>Submit</button>\n        {fetchedData.length > 0 && (\n          <div>\n            <h2>Fetched Details:</h2>\n            {fetchedData.map((detail, index) => (\n              <div key={index} className=\"data-row\">\n                {Object.keys(detail).reduce((chunks, key, index) => {\n                  const chunkIndex = Math.floor(index / 5);\n                  if (!chunks[chunkIndex]) {\n                    chunks[chunkIndex] = [];\n                  }\n                  chunks[chunkIndex].push({ key, value: detail[key] });\n                  return chunks;\n                }, []).map((chunk, index) => (\n                  <div key={index} className=\"row\">\n                    {chunk.map(({ key, value }, index) => (\n                      <p key={index}><strong>{key}:</strong> {value}</p>\n                    ))}\n                  </div>\n                ))}\n                <hr />\n              </div>\n            ))}\n          </div>\n        )}\n        <button onClick={onClose}>Close</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ParseData;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}