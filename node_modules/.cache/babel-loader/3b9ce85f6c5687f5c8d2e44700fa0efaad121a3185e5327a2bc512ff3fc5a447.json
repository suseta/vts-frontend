{"ast":null,"code":"var _jsxFileName = \"/home/rajdeep/RAJDEEP/researchContent/VTS/VTS-Frontend/vts-frontend/frontend/src/Components/ClientServiceDataLog/clientServiceDataLog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './clientServiceDataLog.css';\nimport { ubuntuIP } from '../../Components/constantVariable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet ClientServiceDataLog = () => {\n  _s();\n  let initialState = {\n    s_entity_id: '',\n    s_entity_id_and_name: ''\n  };\n  let [clientServiceDataLogRegDetails, setclientServiceDataLogRegDetails] = useState({\n    s_entity_id: '',\n    s_entity_id_and_name: ''\n  });\n  let handleNameChange = (e, s_entity_id1) => {\n    let {\n      name,\n      value\n    } = e.target;\n    if (name === 's_entity_id_and_name') {\n      setclientServiceDataLogRegDetails(prevData => ({\n        ...prevData,\n        s_entity_id_and_name: value,\n        s_entity_id: s_entity_id1\n      }));\n    }\n  };\n  let [entityNames, setEntityNames] = useState({\n    data: []\n  });\n  useEffect(() => {\n    fetch(`${ubuntuIP}/api/v0/getAllEntityNameList`).then(response => response.json()).then(data => {\n      setEntityNames({\n        data\n      });\n    }).catch(error => {\n      console.error('Error: ', error);\n    });\n  }, []);\n  let resetForm = () => {\n    setclientServiceDataLogRegDetails(initialState);\n  };\n  let [tableData, setTableData] = useState(null);\n  let refreshPage = () => {\n    window.location.reload();\n  };\n  let handleSubmit = e => {\n    e.preventDefault();\n    e.preventDefault();\n    const queryString = `?s_entity_id=${clientServiceDataLogRegDetails.s_entity_id}`;\n    fetch(`${ubuntuIP}/api/v0/getServiceDataLog${queryString}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      setTableData(data);\n      if (data.data && data.data.length > 0) {\n        alert('Data fetched successfully!');\n      } else {\n        alert('No Data Found For This IMEI Number On The Specified Date');\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n      alert('Error! Please try again.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Client Service Data Log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clientServiceDataLogRegistrationForm\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"s_entity_id_and_name\",\n                className: `required-label ${clientServiceDataLogRegDetails.s_entity_id_and_name ? 'required' : ''}`,\n                children: \"Entity:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-select\",\n                id: \"s_entity_id_and_name\",\n                name: \"s_entity_id_and_name\",\n                required: true,\n                value: clientServiceDataLogRegDetails.s_entity_id_and_name,\n                onChange: e => {\n                  let selectedEntity = entityNames.data.data.find(entity => entity.s_entity_name === e.target.value);\n                  handleNameChange(e, selectedEntity === null || selectedEntity === void 0 ? void 0 : selectedEntity.s_entity_id);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 37\n                }, this), entityNames.data && Array.isArray(entityNames.data.data) ? entityNames.data.data.map(entity => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: entity.s_entity_name,\n                  children: entity.s_entity_name\n                }, entity.s_entity_id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 45\n                }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: entityNames.data && entityNames.data.message ? entityNames.data.message : 'No entities available'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"form-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"cancel-button\",\n                onClick: () => {\n                  resetForm();\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"refresh-button\",\n                onClick: refreshPage,\n                children: \"Refresh\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(ClientServiceDataLog, \"AtE38W4b51yhL/evVBveARqg2XA=\");\n_c = ClientServiceDataLog;\nexport default ClientServiceDataLog;\nvar _c;\n$RefreshReg$(_c, \"ClientServiceDataLog\");","map":{"version":3,"names":["React","useState","useEffect","ubuntuIP","jsxDEV","_jsxDEV","ClientServiceDataLog","_s","initialState","s_entity_id","s_entity_id_and_name","clientServiceDataLogRegDetails","setclientServiceDataLogRegDetails","handleNameChange","e","s_entity_id1","name","value","target","prevData","entityNames","setEntityNames","data","fetch","then","response","json","catch","error","console","resetForm","tableData","setTableData","refreshPage","window","location","reload","handleSubmit","preventDefault","queryString","method","headers","length","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","required","onChange","selectedEntity","find","entity","s_entity_name","Array","isArray","map","message","class","type","onClick","_c","$RefreshReg$"],"sources":["/home/rajdeep/RAJDEEP/researchContent/VTS/VTS-Frontend/vts-frontend/frontend/src/Components/ClientServiceDataLog/clientServiceDataLog.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react'\nimport './clientServiceDataLog.css'\n\nimport { ubuntuIP } from '../../Components/constantVariable'\n\nlet ClientServiceDataLog = () => {\n\n    let initialState = {\n        s_entity_id: '',\n        s_entity_id_and_name: '',\n    }\n\n\n\n    let [clientServiceDataLogRegDetails, setclientServiceDataLogRegDetails] = useState({\n        s_entity_id: '',\n        s_entity_id_and_name: '',\n    })\n\n\n    let handleNameChange = (e, s_entity_id1) => {\n        let { name, value } = e.target\n        if (name === 's_entity_id_and_name') {\n            setclientServiceDataLogRegDetails(prevData => ({\n                ...prevData,\n                s_entity_id_and_name: value,\n                s_entity_id: s_entity_id1\n            }))\n        }\n    }\n    let [entityNames, setEntityNames] = useState({ data: [] })\n    useEffect(() => {\n        fetch(`${ubuntuIP}/api/v0/getAllEntityNameList`)\n            .then(response => response.json())\n            .then(data => {\n                setEntityNames({ data })\n            })\n            .catch(error => {\n                console.error('Error: ', error)\n            })\n    }, [])\n\n\n    let resetForm = () => {\n        setclientServiceDataLogRegDetails(initialState)\n    }\n    let [tableData, setTableData] = useState(null);\n\n    let refreshPage = () => {\n        window.location.reload()\n    }\n\n    let handleSubmit = e => {\n        e.preventDefault()\n        e.preventDefault()\n        const queryString = `?s_entity_id=${clientServiceDataLogRegDetails.s_entity_id}`;\n        fetch(`${ubuntuIP}/api/v0/getServiceDataLog${queryString}`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(response => response.json())\n            .then(data => {\n                setTableData(data);\n                if (data.data && data.data.length > 0) {\n                    alert('Data fetched successfully!')\n                }\n                else {\n                    alert('No Data Found For This IMEI Number On The Specified Date')\n                }\n            })\n            .catch(error => {\n                console.error('Error:', error)\n                alert('Error! Please try again.')\n            })\n    }\n\n    return (\n        <div>\n            <div className='wrapper'>\n                <div className='container'>\n                    <h2>Client Service Data Log</h2>\n                    <div className='clientServiceDataLogRegistrationForm'>\n                        <form onSubmit={handleSubmit}>\n                            <div className='form-group'>\n                                <label\n                                    htmlFor='s_entity_id_and_name'\n                                    className={`required-label ${clientServiceDataLogRegDetails.s_entity_id_and_name ? 'required' : ''\n                                        }`}\n                                >\n                                    Entity:\n                                </label>\n                                <select\n                                    className='form-select'\n                                    id='s_entity_id_and_name'\n                                    name='s_entity_id_and_name'\n                                    required\n                                    value={clientServiceDataLogRegDetails.s_entity_id_and_name}\n                                    onChange={e => {\n                                        let selectedEntity = entityNames.data.data.find(\n                                            entity => entity.s_entity_name === e.target.value\n                                        )\n                                        handleNameChange(e, selectedEntity?.s_entity_id)\n                                    }}\n                                >\n                                    <option value=''>Select</option>\n                                    {entityNames.data && Array.isArray(entityNames.data.data) ? (\n                                        entityNames.data.data.map(entity => (\n                                            <option\n                                                key={entity.s_entity_id}\n                                                value={entity.s_entity_name}\n                                            >\n                                                {entity.s_entity_name}\n                                            </option>\n                                        ))\n                                    ) : (\n                                        <option value=''>\n                                            {entityNames.data && entityNames.data.message\n                                                ? entityNames.data.message\n                                                : 'No entities available'}\n                                        </option>\n                                    )}\n                                </select>\n                            </div>\n                            <div class='form-buttons'>\n                                <button type='submit'>Save</button>\n                                <button\n                                    type='button'\n                                    className='cancel-button'\n                                    onClick={() => {\n                                        resetForm()\n                                    }}\n                                >\n                                    Cancel\n                                </button>\n                                <button\n                                    type='button'\n                                    className='refresh-button'\n                                    onClick={refreshPage}\n                                >\n                                    Refresh\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default ClientServiceDataLog\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}