{"ast":null,"code":"var _jsxFileName = \"/home/rajdeep/RAJDEEP/researchContent/VTS/VTS-Frontend/vts-frontend/frontend/src/Components/ClientServiceDataLog/clientServiceDataLog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './clientServiceDataLog.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\nimport { ubuntuIP } from '../../Components/constantVariable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet ClientServiceDataLog = () => {\n  _s();\n  let initialState = {\n    s_entity_id: '',\n    s_entity_id_and_name: ''\n  };\n  let [clientServiceDataLogRegDetails, setclientServiceDataLogRegDetails] = useState({\n    s_entity_id: '',\n    s_entity_id_and_name: ''\n  });\n  let handleNameChange = (e, s_entity_id1) => {\n    let {\n      name,\n      value\n    } = e.target;\n    if (name === 's_entity_id_and_name') {\n      setclientServiceDataLogRegDetails(prevData => ({\n        ...prevData,\n        s_entity_id_and_name: value,\n        s_entity_id: s_entity_id1\n      }));\n    }\n  };\n  let [entityNames, setEntityNames] = useState({\n    data: []\n  });\n  useEffect(() => {\n    fetch(`${ubuntuIP}/api/v0/getAllEntityNameList`).then(response => response.json()).then(data => {\n      setEntityNames({\n        data\n      });\n    }).catch(error => {\n      console.error('Error: ', error);\n    });\n  }, []);\n  let resetForm = () => {\n    setclientServiceDataLogRegDetails(initialState);\n  };\n  let refreshPage = () => {\n    window.location.reload();\n  };\n  let handleSubmit = e => {\n    e.preventDefault();\n    e.preventDefault();\n    const queryString = `?s_entity_id=${clientServiceDataLogRegDetails.s_entity_id}`;\n    fetch(`${ubuntuIP}/api/v0/getServiceDataLog${queryString}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      setTableData(data);\n      if (data.data && data.data.length > 0) {\n        alert('Data fetched successfully!');\n      } else {\n        alert('No Data Found For This IMEI Number On The Specified Date');\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n      alert('Error! Please try again.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Client Service Data Log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clientServiceDataLogRegistrationForm\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"s_entity_id_and_name\",\n                className: `required-label ${clientServiceDataLogRegDetails.s_entity_id_and_name ? 'required' : ''}`,\n                children: \"Entity:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-select\",\n                id: \"s_entity_id_and_name\",\n                name: \"s_entity_id_and_name\",\n                required: true,\n                value: clientServiceDataLogRegDetails.s_entity_id_and_name,\n                onChange: e => {\n                  let selectedEntity = entityNames.data.data.find(entity => entity.s_entity_name === e.target.value);\n                  handleNameChange(e, selectedEntity === null || selectedEntity === void 0 ? void 0 : selectedEntity.s_entity_id);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this), entityNames.data && Array.isArray(entityNames.data.data) ? entityNames.data.data.map(entity => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: entity.s_entity_name,\n                  children: entity.s_entity_name\n                }, entity.s_entity_id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: entityNames.data && entityNames.data.message ? entityNames.data.message : 'No entities available'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"form-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"cancel-button\",\n                onClick: () => {\n                  resetForm();\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"refresh-button\",\n                onClick: refreshPage,\n                children: \"Refresh\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientServiceDataLog, \"jEK1id/3unzfu42II5HxoqSfVDs=\");\n_c = ClientServiceDataLog;\nexport default ClientServiceDataLog;\nvar _c;\n$RefreshReg$(_c, \"ClientServiceDataLog\");","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faEye","faEyeSlash","ubuntuIP","jsxDEV","_jsxDEV","ClientServiceDataLog","_s","initialState","s_entity_id","s_entity_id_and_name","clientServiceDataLogRegDetails","setclientServiceDataLogRegDetails","handleNameChange","e","s_entity_id1","name","value","target","prevData","entityNames","setEntityNames","data","fetch","then","response","json","catch","error","console","resetForm","refreshPage","window","location","reload","handleSubmit","preventDefault","queryString","method","headers","setTableData","length","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","required","onChange","selectedEntity","find","entity","s_entity_name","Array","isArray","map","message","class","type","onClick","_c","$RefreshReg$"],"sources":["/home/rajdeep/RAJDEEP/researchContent/VTS/VTS-Frontend/vts-frontend/frontend/src/Components/ClientServiceDataLog/clientServiceDataLog.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react'\nimport './clientServiceDataLog.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons'\n\nimport {ubuntuIP} from '../../Components/constantVariable'\n\nlet ClientServiceDataLog = () => {\n\n  let initialState = {\n    s_entity_id: '',\n    s_entity_id_and_name: '',\n  }\n\n  \n\n  let [clientServiceDataLogRegDetails, setclientServiceDataLogRegDetails] = useState({\n    s_entity_id: '',\n    s_entity_id_and_name: '',\n  })\n\n  \n  let handleNameChange = (e, s_entity_id1) => {\n    let { name, value } = e.target\n    if (name === 's_entity_id_and_name') {\n      setclientServiceDataLogRegDetails(prevData => ({\n        ...prevData,\n        s_entity_id_and_name: value,\n        s_entity_id: s_entity_id1\n      }))\n    }\n  }\n  let [entityNames, setEntityNames] = useState({ data: [] })\n  useEffect(() => {\n    fetch(`${ubuntuIP}/api/v0/getAllEntityNameList`)\n      .then(response => response.json())\n      .then(data => {\n        setEntityNames({ data })\n      })\n      .catch(error => {\n        console.error('Error: ', error)\n      })\n  }, [])\n\n  \n  let resetForm = () => {\n    setclientServiceDataLogRegDetails(initialState)\n  }\n\n  let refreshPage = () => {\n    window.location.reload()\n  }\n\n  let handleSubmit = e => {\n    e.preventDefault()\n    e.preventDefault()\n    const queryString = `?s_entity_id=${clientServiceDataLogRegDetails.s_entity_id}`;\n    fetch(`${ubuntuIP}/api/v0/getServiceDataLog${queryString}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json())\n    .then(data => {\n      setTableData(data);\n      if (data.data && data.data.length > 0) {\n        alert('Data fetched successfully!')\n      }\n      else{\n        alert('No Data Found For This IMEI Number On The Specified Date')\n      }\n    })\n    .catch(error => {\n      console.error('Error:', error)\n      alert('Error! Please try again.')\n    })\n}\n\n  return (\n    <div>\n      <div className='wrapper'>\n        <div className='container'>\n          <h2>Client Service Data Log</h2>\n          <div className='clientServiceDataLogRegistrationForm'>\n            <form onSubmit={handleSubmit}>\n              <div className='form-group'>\n                <label\n                  htmlFor='s_entity_id_and_name'\n                  className={`required-label ${\n                    clientServiceDataLogRegDetails.s_entity_id_and_name ? 'required' : ''\n                  }`}\n                >\n                  Entity:\n                </label>\n                <select\n                  className='form-select'\n                  id='s_entity_id_and_name'\n                  name='s_entity_id_and_name'\n                  required\n                  value={clientServiceDataLogRegDetails.s_entity_id_and_name}\n                  onChange={e => {\n                    let selectedEntity = entityNames.data.data.find(\n                      entity => entity.s_entity_name === e.target.value\n                    )\n                    handleNameChange(e, selectedEntity?.s_entity_id)\n                  }}\n                >\n                  <option value=''>Select</option>\n                  {entityNames.data && Array.isArray(entityNames.data.data) ? (\n                    entityNames.data.data.map(entity => (\n                      <option\n                        key={entity.s_entity_id}\n                        value={entity.s_entity_name}\n                      >\n                        {entity.s_entity_name}\n                      </option>\n                    ))\n                  ) : (\n                    <option value=''>\n                      {entityNames.data && entityNames.data.message\n                        ? entityNames.data.message\n                        : 'No entities available'}\n                    </option>\n                  )}\n                </select>\n              </div>\n              <div class='form-buttons'>\n                <button type='submit'>Save</button>\n                <button\n                  type='button'\n                  className='cancel-button'\n                  onClick={() => {\n                    resetForm()\n                  }}\n                >\n                  Cancel\n                </button>\n                <button\n                  type='button'\n                  className='refresh-button'\n                  onClick={refreshPage}\n                >\n                  Refresh\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default ClientServiceDataLog\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}